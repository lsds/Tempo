from typing import TypeAlias

import islpy as _isl

# NOTE: This file is a workaround for the lack of support for islpy types in the type annotations.

# Define type aliases for islpy classes

Error: TypeAlias = "_isl.Error"

# Name imports
Context: TypeAlias = "_isl.Context"
IdList: TypeAlias = "_isl.IdList"
ValList: TypeAlias = "_isl.ValList"
BasicSetList: TypeAlias = "_isl.BasicSetList"
BasicMapList: TypeAlias = "_isl.BasicMapList"
SetList: TypeAlias = "_isl.SetList"
MapList: TypeAlias = "_isl.MapList"
UnionSetList: TypeAlias = "_isl.UnionSetList"
ConstraintList: TypeAlias = "_isl.ConstraintList"
AffList: TypeAlias = "_isl.AffList"
PwAffList: TypeAlias = "_isl.PwAffList"
PwMultiAffList: TypeAlias = "_isl.PwMultiAffList"
AstExprList: TypeAlias = "_isl.AstExprList"
AstNodeList: TypeAlias = "_isl.AstNodeList"
QPolynomialList: TypeAlias = "_isl.QPolynomialList"
PwQPolynomialList: TypeAlias = "_isl.PwQPolynomialList"
PwQPolynomialFoldList: TypeAlias = "_isl.PwQPolynomialFoldList"
UnionPwAffList: TypeAlias = "_isl.UnionPwAffList"
UnionPwMultiAffList: TypeAlias = "_isl.UnionPwMultiAffList"
UnionMapList: TypeAlias = "_isl.UnionMapList"
IdToAstExpr: TypeAlias = "_isl.IdToAstExpr"
Printer: TypeAlias = "_isl.Printer"
Val: TypeAlias = "_isl.Val"
MultiVal: TypeAlias = "_isl.MultiVal"
Vec: TypeAlias = "_isl.Vec"
Mat: TypeAlias = "_isl.Mat"
FixedBox: TypeAlias = "_isl.FixedBox"
Aff: TypeAlias = "_isl.Aff"
PwAff: TypeAlias = "_isl.PwAff"
UnionPwAff: TypeAlias = "_isl.UnionPwAff"
MultiAff: TypeAlias = "_isl.MultiAff"
MultiPwAff: TypeAlias = "_isl.MultiPwAff"
PwMultiAff: TypeAlias = "_isl.PwMultiAff"
UnionPwMultiAff: TypeAlias = "_isl.UnionPwMultiAff"
MultiUnionPwAff: TypeAlias = "_isl.MultiUnionPwAff"
Id: TypeAlias = "_isl.Id"
MultiId: TypeAlias = "_isl.MultiId"
Constraint: TypeAlias = "_isl.Constraint"
Space: TypeAlias = "_isl.Space"
LocalSpace: TypeAlias = "_isl.LocalSpace"
BasicSet: TypeAlias = "_isl.BasicSet"
BasicMap: TypeAlias = "_isl.BasicMap"
Set: TypeAlias = "_isl.Set"
Map: TypeAlias = "_isl.Map"
UnionMap: TypeAlias = "_isl.UnionMap"
UnionSet: TypeAlias = "_isl.UnionSet"
Point: TypeAlias = "_isl.Point"
Vertex: TypeAlias = "_isl.Vertex"
Cell: TypeAlias = "_isl.Cell"
Vertices: TypeAlias = "_isl.Vertices"
StrideInfo: TypeAlias = "_isl.StrideInfo"
QPolynomialFold: TypeAlias = "_isl.QPolynomialFold"
PwQPolynomialFold: TypeAlias = "_isl.PwQPolynomialFold"
UnionPwQPolynomialFold: TypeAlias = "_isl.UnionPwQPolynomialFold"
UnionPwQPolynomial: TypeAlias = "_isl.UnionPwQPolynomial"
QPolynomial: TypeAlias = "_isl.QPolynomial"
PwQPolynomial: TypeAlias = "_isl.PwQPolynomial"
Term: TypeAlias = "_isl.Term"
ScheduleConstraints: TypeAlias = "_isl.ScheduleConstraints"
ScheduleNode: TypeAlias = "_isl.ScheduleNode"
Schedule: TypeAlias = "_isl.Schedule"
AccessInfo: TypeAlias = "_isl.AccessInfo"
Flow: TypeAlias = "_isl.Flow"
Restriction: TypeAlias = "_isl.Restriction"
UnionAccessInfo: TypeAlias = "_isl.UnionAccessInfo"
UnionFlow: TypeAlias = "_isl.UnionFlow"
AstExpr: TypeAlias = "_isl.AstExpr"
AstNode: TypeAlias = "_isl.AstNode"
AstPrintOptions: TypeAlias = "_isl.AstPrintOptions"
AstBuild: TypeAlias = "_isl.AstBuild"

# Enums and backward compatibility
dim_type: TypeAlias = "_isl.dim_type"
schedule_node_type: TypeAlias = "_isl.schedule_node_type"
ast_expr_op_type: TypeAlias = "_isl.ast_expr_op_type"
ast_expr_type: TypeAlias = "_isl.ast_expr_type"
ast_node_type: TypeAlias = "_isl.ast_node_type"
ast_loop_type: TypeAlias = "_isl.ast_loop_type"
fold: TypeAlias = "_isl.fold"
format: TypeAlias = "_isl.format"  # noqa: A001
yaml_style: TypeAlias = "_isl.yaml_style"
bound: TypeAlias = "_isl.bound"
on_error: TypeAlias = "_isl.on_error"
schedule_algorithm: TypeAlias = "_isl.schedule_algorithm"

# Backward compatibility
ast_op_type: TypeAlias = "_isl.ast_expr_op_type"
